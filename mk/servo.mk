# Rozsdamaro -- Servo-specific rules
#
# Copyright (c) 2015, University of Szeged
# Copyright (c) 2015, Akos Kiss <akiss@inf.u-szeged.hu>


################################################################################
# General directory shorthand

SERVO_SRC_DIR:=$(SERVO_SRC_DIR_$(BUILD_ARCH))


################################################################################
## ## Servo build rules
##
## * make servo-build-hash HASH=hhh|nnn
## * make servo-build-hash-log HASH=hhh|nnn
## * make servo-build-master
## * make servo-build-master-log
##

SERVO_HASH_OUT:=$(shell mktemp --tmpdir --dry-run rzsd-servo-hash.XXXXXXXXXX)
SERVO_TIME_OUT:=$(shell mktemp --tmpdir --dry-run rzsd-servo-time.XXXXXXXXXX)
SERVO_RUST_ROOT:=$(shell mktemp --tmpdir --dry-run rzsd-servo-rustroot.XXXXXXXXXX)
SERVO_PKG_ID=servo-`cat $(SERVO_TIME_OUT)`-`cat $(SERVO_HASH_OUT)`
SERVO_LATEST:=servo-latest

.PHONY: servo-build-hash
servo-build-hash: $(STORE_DIR)
	@[ -n "$(HASH)" ] || ( echo "$(IDENT): Error: Please specify HASH to build." && false )
	cd $(SERVO_SRC_DIR) && git checkout $(HASH)
	cd $(SERVO_SRC_DIR) && git rev-parse --short $(HASH) >$(SERVO_HASH_OUT)
	cd $(SERVO_SRC_DIR) && date -u +%Y%m%d-%H%M%S -d "$$(git show `cat $(SERVO_HASH_OUT)` --format=format:%cd --date=iso | head -1)" >$(SERVO_TIME_OUT)
	@echo "$(IDENT): Servo hash is `cat $(SERVO_HASH_OUT)`"
	@echo "$(IDENT): Servo commit date is `cat $(SERVO_TIME_OUT)`"
	@echo "$(IDENT): Servo build started at `date -u +%Y%m%d-%H%M%S`"
	@echo "$(IDENT): Servo build/target architecture is $(BUILD_ARCH)/$(TARGET_ARCH)"
	@echo "$(IDENT): Servo build uses MAKEFLAGS=\"$(MAKEFLAGS)\""
	
	-cd $(SERVO_SRC_DIR) && ./mach clean
	ls -d $(INST_DIR)/rust-*-$(shell cat $(SERVO_SRC_DIR)/rust-snapshot-hash | cut -c 1-7) >$(SERVO_RUST_ROOT)
	grep $(IDENT) $(SERVO_SRC_DIR)/.servobuild || ( mv $(SERVO_SRC_DIR)/.servobuild $(SERVO_SRC_DIR)/.servobuild.orig ; true )
	echo "# Automatically generated by $(IDENT)" >$(SERVO_SRC_DIR)/.servobuild
	echo "[tools]" >>$(SERVO_SRC_DIR)/.servobuild
	echo "system-rust = true" >>$(SERVO_SRC_DIR)/.servobuild
	echo "rust-root = \"`cat $(SERVO_RUST_ROOT)`\"" >>$(SERVO_SRC_DIR)/.servobuild
	echo "system-cargo = true" >>$(SERVO_SRC_DIR)/.servobuild
	echo "cargo-root = \"$(INST_DIR)/cargo-latest\"" >>$(SERVO_SRC_DIR)/.servobuild
	cd $(SERVO_SRC_DIR) && ./mach build --dev --verbose
	
	tar cvfj $(STORE_DIR)/$(SERVO_PKG_ID)-$(TARGET_ARCH)-inst.tar.bz2 -C $(SERVO_SRC_DIR)/target/debug servo -C $(SERVO_SRC_DIR) resources
	cd $(STORE_DIR) && ln -sfT $(SERVO_PKG_ID)-$(TARGET_ARCH)-inst.tar.bz2 $(SERVO_LATEST)-$(TARGET_ARCH)-inst.tar.bz2
	
	@echo "$(IDENT): Servo build finished at `date -u +%Y%m%d-%H%M%S`"
	rm -f $(SERVO_HASH_OUT)
	rm -f $(SERVO_TIME_OUT)
	rm -f $(SERVO_RUST_ROOT)

.PHONY: servo-build-master
servo-build-master:
	$(MAKE) -C $(RZSD_DIR) servo-build-hash HASH=master

.PHONY: servo-build-hash-log
servo-build-hash-log: $(STORE_DIR)
	( time $(MAKE) -C $(RZSD_DIR) servo-build-hash 2>&1 ) | tee $(STORE_DIR)/$(SERVO_LATEST)-$(TARGET_ARCH)-log$(XBUILT).txt
	cd $(SERVO_SRC_DIR) && git rev-parse --short $(HASH) >$(SERVO_HASH_OUT)
	cd $(SERVO_SRC_DIR) && date -u +%Y%m%d-%H%M%S -d "$$(git show `cat $(SERVO_HASH_OUT)` --format=format:%cd --date=iso | head -1)" >$(SERVO_TIME_OUT)
	mv $(STORE_DIR)/$(SERVO_LATEST)-$(TARGET_ARCH)-log$(XBUILT).txt $(STORE_DIR)/$(SERVO_PKG_ID)-$(TARGET_ARCH)-log$(XBUILT).txt
	rm -f $(SERVO_HASH_OUT)
	rm -f $(SERVO_TIME_OUT)

.PHONY: servo-build-master-log
servo-build-master-log:
	$(MAKE) -C $(RZSD_DIR) servo-build-hash-log HASH=master


################################################################################
## ## Servo local copy maintenance rules
##
## * make servo-pull-upstream
##

.PHONY: servo-pull-upstream
servo-pull-upstream:
	cd $(SERVO_SRC_DIR) && git fetch $(SERVO_UPSTREAM_REMOTE)
	cd $(SERVO_SRC_DIR) && git checkout master
	cd $(SERVO_SRC_DIR) && git merge --ff-only $(SERVO_UPSTREAM_REMOTE)/master
